<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Passwordless Login - Scalekit Auth Demo</title>
  <link href="/css/output.css" rel="stylesheet">
</head>

<body class="bg-primary-grey-75 min-h-screen flex items-center justify-center">
  <div class="bg-white p-8 rounded-lg shadow-md w-96">
    <h1 class="text-2xl font-bold text-center mb-6 text-primary-graphite-300">Passwordless Login</h1>

    <!-- Message Area -->
    <div id="messageArea" class="mb-4"></div>

    <!-- Email Form -->
    <div id="emailSection">
      <p class="text-sm text-primary-graphite-100 text-center mb-6">Enter your email to receive a verification code or
        magic link</p>

      <form id="emailForm" class="space-y-4">
        <div>
          <label for="email" class="block text-sm font-medium text-primary-graphite-300 mb-2">Email Address</label>
          <input type="email" id="email" name="email" required
            class="w-full px-3 py-2 border border-primary-grey-200 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-indigo-300 focus:border-primary-indigo-300"
            placeholder="Enter your email">
        </div>

        <button type="submit" id="emailBtn"
          class="w-full py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-indigo-300 hover:bg-primary-indigo-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-indigo-300 disabled:bg-primary-grey-200 disabled:cursor-not-allowed">
          Send Verification
        </button>
      </form>

      <div class="mt-6 text-center">
        <a href="/" class="text-sm text-primary-indigo-300 hover:text-primary-indigo-400">
          ← Back to Login Options
        </a>
      </div>
    </div>

    <!-- Code Verification Form -->
    <div id="codeSection" class="hidden">
      <p class="text-sm text-primary-graphite-100 text-center mb-6">
        Enter the 6-digit code we sent to <br><span id="emailDisplay"
          class="font-medium text-primary-graphite-300"></span>
      </p>

      <form id="codeForm" class="space-y-4">
        <div>
          <label for="code" class="block text-sm font-medium text-primary-graphite-300 mb-2">Verification Code</label>
          <input type="text" id="code" name="code" required maxlength="6"
            class="w-full px-3 py-2 border border-primary-grey-200 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-indigo-300 focus:border-primary-indigo-300 text-center text-xl tracking-widest font-mono"
            placeholder="000000" inputmode="numeric">
        </div>

        <button type="submit" id="codeBtn"
          class="w-full py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-indigo-300 hover:bg-primary-indigo-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-indigo-300 disabled:bg-primary-grey-200 disabled:cursor-not-allowed">
          Verify Code
        </button>
      </form>

      <div class="mt-4 text-center space-y-2">
        <button id="resendBtn" class="text-sm text-primary-indigo-300 hover:text-primary-indigo-400">
          Didn't receive a code? Resend
        </button>
        <br>
        <button id="backBtn" class="text-sm text-primary-graphite-100 hover:text-primary-graphite-300">
          ← Use a different email
        </button>
      </div>
    </div>

    <!-- Magic Link Instructions -->
    <div id="magicSection" class="hidden text-center">
      <h3 class="text-lg font-medium text-primary-graphite-300 mb-4">Check Your Email</h3>
      <p class="text-sm text-primary-graphite-100 mb-4">
        We sent a magic link to <br><span id="magicEmailDisplay" class="font-medium text-primary-graphite-300"></span>
      </p>
      <p class="text-sm text-primary-graphite-100 mb-6">
        Click the link in your email to sign in instantly.
      </p>

      <button id="backToEmailBtn" class="text-sm text-primary-indigo-300 hover:text-primary-indigo-400">
        ← Use a different email
      </button>
    </div>
  </div>

  <script>
    // Global state
    let authRequestId = null;
    let currentEmail = null;

    // DOM elements
    const emailSection = document.getElementById('emailSection');
    const codeSection = document.getElementById('codeSection');
    const magicSection = document.getElementById('magicSection');
    const messageArea = document.getElementById('messageArea');

    // Show specific section
    function showSection(section) {
      // Hide all sections
      emailSection.style.display = 'none';
      codeSection.style.display = 'none';
      magicSection.style.display = 'none';

      // Show requested section
      if (section === 'email') {
        emailSection.style.display = 'block';
        setTimeout(() => document.getElementById('email').focus(), 100);
      } else if (section === 'code') {
        codeSection.style.display = 'block';
        setTimeout(() => document.getElementById('code').focus(), 100);
      } else if (section === 'magic') {
        magicSection.style.display = 'block';
      }
    }

    // Show message
    function showMessage(type, text) {
      const bgColor = type === 'success' ? 'bg-green-100 border-green-400 text-green-700' : 'bg-red-100 border-red-400 text-red-700';
      messageArea.innerHTML = `<div class="px-4 py-3 rounded border ${bgColor}">${text}</div>`;
    }

    // Clear message
    function clearMessage() {
      messageArea.innerHTML = '';
    }

    // Handle email form
    document.getElementById('emailForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const email = document.getElementById('email').value.trim();
      if (!email) return;

      const btn = document.getElementById('emailBtn');
      btn.disabled = true;
      btn.textContent = 'Sending...';
      clearMessage();

      try {
        const response = await fetch('/passwordless/send', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email })
        });

        const data = await response.json();

        if (data.success) {
          currentEmail = email;
          authRequestId = data.authRequestId;

          if (data.passwordlessType === 'OTP' || data.passwordlessType === 'LINK_OTP') {
            document.getElementById('emailDisplay').textContent = email;
            showSection('code');
            showMessage('success', 'Verification code sent! Check your email.');
          } else {
            document.getElementById('magicEmailDisplay').textContent = email;
            showSection('magic');
            showMessage('success', 'Magic link sent! Check your email.');
          }
        } else {
          showMessage('error', data.error || 'Failed to send verification email');
        }
      } catch (error) {
        showMessage('error', 'Network error. Please try again.');
      } finally {
        btn.disabled = false;
        btn.textContent = 'Send Verification';
      }
    });

    // Handle code form
    document.getElementById('codeForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const code = document.getElementById('code').value.trim();
      if (!code || !authRequestId) return;

      const btn = document.getElementById('codeBtn');
      btn.disabled = true;
      btn.textContent = 'Verifying...';
      clearMessage();

      try {
        const response = await fetch('/passwordless/verify-code', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ code, authRequestId })
        });

        const data = await response.json();

        if (data.success) {
          showMessage('success', 'Success! Redirecting...');
          setTimeout(() => {
            window.location.href = data.redirectUrl || '/dashboard';
          }, 1000);
        } else {
          showMessage('error', data.error || 'Invalid code. Please try again.');
          document.getElementById('code').value = '';
          document.getElementById('code').focus();
        }
      } catch (error) {
        showMessage('error', 'Network error. Please try again.');
      } finally {
        btn.disabled = false;
        btn.textContent = 'Verify Code';
      }
    });

    // Handle resend
    document.getElementById('resendBtn').addEventListener('click', async () => {
      if (!authRequestId) return;

      const btn = document.getElementById('resendBtn');
      const originalText = btn.textContent;
      btn.disabled = true;
      btn.textContent = 'Resending...';
      clearMessage();

      try {
        const response = await fetch('/passwordless/resend', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ authRequestId })
        });

        const data = await response.json();

        if (data.success) {
          showMessage('success', 'Code resent successfully!');
        } else {
          showMessage('error', data.error || 'Failed to resend code');
        }
      } catch (error) {
        showMessage('error', 'Network error. Please try again.');
      } finally {
        btn.disabled = false;
        btn.textContent = originalText;
      }
    });

    // Handle back buttons
    document.getElementById('backBtn').addEventListener('click', () => {
      clearMessage();
      showSection('email');
    });

    document.getElementById('backToEmailBtn').addEventListener('click', () => {
      clearMessage();
      showSection('email');
    });

    // Auto-submit code when 6 digits entered
    document.getElementById('code').addEventListener('input', (e) => {
      const code = e.target.value.replace(/\D/g, '');
      e.target.value = code;

      if (code.length === 6) {
        setTimeout(() => {
          document.getElementById('codeForm').dispatchEvent(new Event('submit'));
        }, 500);
      }
    });

    // Initialize
    showSection('email');
  </script>
</body>

</html>